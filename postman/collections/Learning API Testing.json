{
	"info": {
		"_postman_id": "fe20dde1-9721-484c-ab3e-fb4711706e84",
		"name": "Learning API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "2926327-fe20dde1-9721-484c-ab3e-fb4711706e84"
	},
	"item": [
		{
			"name": "API Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3af208e0-f9c7-47c3-8a6e-1654c5d34bf1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json();\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "d0c69026-6eb1-422a-ab69-be3ac0353487",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/status",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"status"
					]
				},
				"description": "Using postman to test API"
			},
			"response": []
		},
		{
			"name": "Register api client",
			"id": "1fefb500-a840-4679-9435-d816b28f3e93",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"Postman\",\r\n   \"clientEmail\": \"avinash@example.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api-clients/",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "List of Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "17990804-baac-449c-bd0f-f14f2944b2e1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json()\r",
							"console.log(response)\r",
							"\r",
							"const booksAvailable = response.filter((books) => books.available === true)\r",
							"console.log(booksAvailable)\r",
							"\r",
							"pm.test(\"Book available\", function(){\r",
							"    pm.expect(booksAvailable[0].available).to.be.true\r",
							"    pm.expect(booksAvailable[1].name).to.eql(\"The Vanishing Half\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ae3dabac-4cfe-4fd4-a5c2-974105ee7cde",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/books",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"type": "text",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Iterating List of Books Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "521502a2-a6fa-4c2b-a393-a42d4c6c1565",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json()\r",
							"\r",
							"pm.test(\"Book Available\", function () {\r",
							"let hasName= false;\r",
							"response.forEach(item=>{\r",
							"console.log(item.name);\r",
							"if(item.name === 'Untamed'){\r",
							"    hasName = true;\r",
							"}\r",
							"});\r",
							"pm.expect(hasName).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3f84d48f-eafe-4f7f-ac72-6f67e381678c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/books",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"type": "text",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get particular book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0080fc4a-4650-4320-b408-e39deded4015",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3a876a5e-62d1-4d6f-a6c6-8d44250b1088",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/books/:bookId",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Book Limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "349693db-395b-4987-b013-f72eda38b819",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "914e4bb9-169f-4a2e-ad2b-39e9ce327f98",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/books?limit=5&type=fiction",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						},
						{
							"key": "limit",
							"value": "21",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "type",
							"value": "fiction"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Order book",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d3626674-02ad-4daa-8668-63df97993569",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const response = pm.response.json()\r",
							"\r",
							"pm.globals.set(\"orderId\",response.orderId)"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "ea919763-e9c7-4b64-850f-a35b2c5ebbd8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": 1,\r\n  \"customerName\": \"{{$randomFullName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/orders",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get list of Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c2b946e-60e1-4114-a3d1-1b5ba5ad61a3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c1529e36-56f0-4a8a-8949-69b5d0bbf22f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/orders",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get  specific order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0fbfd8ff-6e57-4250-88c7-b92eaa913223",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json()\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "5ce98445-1f18-4bfa-a8ca-ac850bab80ed",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/orders/:orderId",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d20f192-c491-4933-af26-f94f2875588e",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "b1e95209-927e-4f0a-9600-ad93ef8acd2e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\": \"John {{$randomLastName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/orders/:orderId",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an order",
			"id": "3d1365dc-6527-4fb4-8369-752d336cef80",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"customerName\": \"John\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/orders/:orderId",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cb9d0304-7347-4c90-b992-3cf54bc7431d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "07c8e37f-d5a0-467e-9a12-45117bf973c4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "23efeecc-4ed6-48d8-8d57-e99cf17ff083",
			"key": "BaseUrl",
			"value": "https://simple-books-api.glitch.me"
		},
		{
			"id": "c8c7e85d-25ff-4b25-b0aa-ad368fd0d54a",
			"key": "accessToken",
			"value": "7507afc73e7661bf068b0062bd7b4d9e1e5a6dfe716a8af5ed7f695ea96a18f5",
			"type": "string"
		}
	]
}